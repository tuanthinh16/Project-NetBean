/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databasedemo_student_2;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

//////////////////////////////////////////////////////////
//chú Y: khi tạo 1 panel sau đó tạo 1 table lên đó = kéo thả thì netbeans sẽ tự động sinh ra jScrollPane1 rồi mới chèn table lên cái jScrollPane1 đó
//vậy có 3 thành phần: panel(jScrollPane1(table))
//////////////////////////////////////////////////////////////////////////////////////////


/**
 *
 * @author AnhTu
 */
public class MyFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyFrame
     */
    private MyConnect myConnect;
    private Connection connection;
    public MyFrame() {
        initComponents();
        showData_In_Table();
    }
    
    public ArrayList<Student_2> getStudentList() { //hàm này trả về 1 mảng danh sách các sinh viên trong database, mảng danh sách này thuộc kiểu ArrayList
        ArrayList<Student_2> student_List = new ArrayList<Student_2>();
        
        myConnect = new MyConnect(); //CHÚ Ý NẾU THIẾU DÒNG KHỞI TẠO NÀY LÀ SAI, LỖI, CỰC NGUY HIỂM!
        
        Connection connection = myConnect.getConnection();
        Statement st;
        ResultSet rs;
        String query = "SELECT * FROM student2";
        try {
            st = connection.createStatement();
            rs = st.executeQuery(query);
            Student_2 std2 ;
            while(rs.next()) {
                std2 = new Student_2(rs.getString("id"), rs.getString("name"), rs.getString("Gioi_tinh"), rs.getString("Dia_chi"), rs.getString("email"));
                student_List.add(std2);
            } 
        } catch (SQLException ex) {
            Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return student_List; //mảng này chứa toàn bộ danh sách trong bảng sv ở database
    }
    
    //Hiển thị data lên table
    public void showData_In_Table() {
        ArrayList<Student_2> list = getStudentList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] column = new Object[5]; //so cot = 5
        
        //cho i chạy list.size() -1 lần, mỗi lần lấy giá trị của 5 cột trên database gán vào column[j], j=0,1,2,3,4, rồi cho cả cái column ý vào 1 hàng table
        for (int i = 0; i < list.size(); i++) {
            column[0] = list.get(i).getId();
            column[1] = list.get(i).getName();
            column[2] = list.get(i).getGioitinh();
            column[3] = list.get(i).getAddress();
            column[4] = list.get(i).getEmail();
            
            model.addRow(column); //cho từng cột vào hàng (có 5 cột thôi)
        } //vòng lặp này cho từng hàng vào bảng (số hàng ko xác định đc)
    }
    
    private void refreshTale() {
        //refresh table after delete, update or insert
        //đầu tiên xóa cái bảng đi, sau đó hiển thị lại
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        showData_In_Table();
    }
    
    public void executeSQLQuery(String query, String message) { //hàm này để insert, update, delete, thực hiện thông qua hàm executeUpdate()
        Connection con = myConnect.getConnection();
        Statement st = null ;
        try {
            st = con.createStatement();
            if(st.executeUpdate(query) == 1) {
                JOptionPane.showMessageDialog(null, "Data "+message+" Successfully");
            }
            else {
                JOptionPane.showMessageDialog(null, "Data not "+message);
           
            }
        } catch (SQLException ex) {
            Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.toString());
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfID = new javax.swing.JTextField();
        tfDiaChi = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        tfGioiTinh = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btUpdate = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btInsert = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setText("ID");

        jLabel2.setText("Họ Tên");

        jLabel3.setText("Địa chỉ");

        jLabel4.setText("Giới tính");

        jLabel5.setText("email");

        tfGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfGioiTinhActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ Tên", "Địa chỉ", "Giới tính", "email"
            }
        ));
        table.setColumnSelectionAllowed(false);
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tableMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tableKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        btUpdate.setText("Update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btInsert.setText("Insert");
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertActionPerformed(evt);
            }
        });

        jButton1.setText("Connect to database");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfDiaChi))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfID)
                                            .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(32, 32, 32)
                                        .addComponent(tfEmail))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfGioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfGioiTinhActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        //CHÚ Ý LỆNH UPDATE trong mysql:
        //UPDATE student2 set name = 'cell', Gioi_tinh = 'nam', Dia_chi = 'the Earth', email = 'cell@yahoo.com' where id = '20130007'
        String query = "UPDATE student2 SET name = '" + tfName.getText() + "', Dia_chi = '" + tfDiaChi.getText() + "', Gioi_tinh = '" + tfGioiTinh.getText() + "', email = '" + tfEmail.getText() + "' WHERE id = '" + tfID.getText() +"'";
        executeSQLQuery(query, "updated");
        refreshTale();
    }//GEN-LAST:event_btUpdateActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        //display selected row in textfield
        //khi click chuột vào bảng thì hiển thị hàng đó 
        int i = table.getSelectedRow();
        TableModel model = table.getModel();
        tfID.setText(model.getValueAt(i, 0).toString());
        tfName.setText(model.getValueAt(i, 1).toString());
        tfDiaChi.setText(model.getValueAt(i, 2).toString()); //hoac: (String) model.getValueAt(i, 2)
        tfGioiTinh.setText(model.getValueAt(i, 3).toString());
        tfEmail.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(table.getRowCount() == 0) { //khi bảng chưa có hàng nào mới hiển thị lên
            showData_In_Table();
        }
        else System.out.println("Đã connect rồi, số hàng = "+table.getRowCount());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertActionPerformed
        //String query = "INSERT INTO student2 VALUE ('" +tfID.getText()+"', '"+tfName.getText()+"', '"+tfDiaChi.getText()+"', '" + tfGioiTinh.getText()+ "', '" + tfEmail.getText() +"')";
        //chú ý ở trên nhập có dấu cách là sai nhé. bỏ đi
        String query = "INSERT INTO student2 value ('"+tfID.getText()+"','"+tfName.getText()+"','"+tfDiaChi.getText()+"','"+tfGioiTinh.getText()+"','"+tfEmail.getText()+"')";
        //chú ý là phải viết đúng cú pháp SQL: INSERT INTO student2 value(?,?,?,?,?); với 5 dấu hỏi làm 5 trường của table
        //chú ý lệnh insert trong mysql:
        //INSERT INTO `student_2`.`student2` (`id`, `name`, `Gioi_tinh`, `Dia_chi`, `email`) VALUES ('20130006', 'yamcha', 'nam', 'tokyo', 'yamcha@gmail.com');
        //hoặc: INSERT INTO student2 VALUE ('20130007', 'vegeta', 'nam', 'saiyan', 'vegeta@gmail.com');
        executeSQLQuery(query, "inserted");
        refreshTale();
    }//GEN-LAST:event_btInsertActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        int choice = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa? Cannot restore this action!", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if(choice == JOptionPane.YES_OPTION) { 
            String quer = "delete from student2 where id = '"+tfID.getText()+"'";
            executeSQLQuery(quer, "deleted");
            refreshTale();
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void tableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseEntered
        System.out.println("mouse enterd");
    }//GEN-LAST:event_tableMouseEntered

    private void tableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseExited
        System.out.println("mouse exited");
    }//GEN-LAST:event_tableMouseExited

    private void tableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMousePressed
        System.out.println("mouse pressed");
    }//GEN-LAST:event_tableMousePressed

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        System.out.println("mouse released");
    }//GEN-LAST:event_tableMouseReleased

    private void tableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyTyped
        System.out.println("key typed");
    }//GEN-LAST:event_tableKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MyFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                new MyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btInsert;
    private javax.swing.JButton btUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfDiaChi;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfGioiTinh;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}
